name: .NET Build, Test and Publish

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DISCOS_API_KEY: ${{ secrets.DISCOS_API_KEY }}
      DISCOS_API_URL: http://localhost:3000/api/
    steps:
    - uses: actions/checkout@v2
      with: 
        submodules: recursive
    - name: Build docker stack
      run: docker-compose -f src/DISCOSweb-Sdk/DISCOSweb-Sdk.Tests/docker-compose.yml up -d --force-recreate --build
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore src/DISCOSweb-Sdk/DISCOSweb-Sdk.sln
    - name: Build
      run: dotnet build --no-restore src/DISCOSweb-Sdk/DISCOSweb-Sdk.sln
    - name: Test
      run: dotnet test --no-build --verbosity normal src/DISCOSweb-Sdk/DISCOSweb-Sdk.sln
  publish:
    if: github.event.pull_request.merged == 'true'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Publish
        id: publish_nuget
        uses: brandedoutcast/publish-nuget@v2
        with:
          PACKAGE_NAME: DISCOSweb-Sdk
          PROJECT_FILE_PATH: "**/DISCOSweb-Sdk.csproj"
          BUILD_CONFIGURATION: Release
          NUGET_KEY: ${{secrets.NUGET_KEY}}
          VERSION_STATIC: 1.0.0 # Replace with something better
